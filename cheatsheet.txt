# Vanilla Ubuntu
docker container run --rm ubuntu:latest /bin/bash -c "/bin/cat /etc/passwd | wc -l"
docker container run --rm -ti ubuntu:latest /bin/bash
docker container run --name local-ubuntu -d ubuntu:latest
docker container exec -it local-ubuntu /bin/bash 
docker container stop local-ubuntu
docker commit local-ubuntu -t farhan5248/ubuntu-runner:latest
docker push farhan5248/ubuntu-runner:latest

# MySQL Healthcheck
docker image build -f mysql.dockerfile -t farhan5248/sheep-dog-dev-db:latest .
docker run --name sheep-dog-dev-db -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 -d farhan5248/sheep-dog-dev-db:latest
docker container stop -t 1 sheep-dog-dev-db
docker container start --restart=on-failure:2 sheep-dog-dev-db

# ActiveMQ
docker container run --name sheep-dog-dev-mq -p 61616:61616 -p 8161:8161 -d apache/activemq-artemis:latest-alpine
docker container run --name sheep-dog-dev-mq -p 61616:61616 -p 8161:8161 -e ARTEMIS_USER=artemis -e ARTEMIS_PASSWORD=artemis apache/activemq-artemis:latest-alpine
docker container run --name sheep-dog-dev-mq -p 61616:61616 -p 8161:8161 -v <broker folder on host>:/var/lib/artemis-instance apache/activemq-artemis:latest-alpine

# Docker Compose
docker compose config
docker compose build
docker compose up -d
docker compose -p "sheep-dog-dev" up -d
docker compose -f docker-compose-defaults.yaml up -d
docker compose run --rm -d sheep-dog-dev-svc-lcl
docker compose exec sheep-dog-svc-lcl /bin/sh
docker compose start
docker compose stop
docker compose down

# Minikube
minikube start
minikube dashboard
minikube service kubernetes-bootcamp
minikube stop

# Kubectl
kubectl proxy
kubectl create deployment kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1
kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8080
kubectl expose deployment/kubernetes-bootcamp --type="LoadBalancer" --port 8080
kubectl get deployments
kubectl get pods
kubectl get pods -l app=kubernetes-bootcamp
kubectl describe pods
kubectl get services
kubectl get services -l app=kubernetes-bootcamp
kubectl logs kubernetes-bootcamp-68cfbdbb99-r8m86
kubectl exec -ti sheep-dog-dev-6b9b78d5cd-s9vkq -n sheep-dog-dev -- bash
kubectl scale deployments/kubernetes-bootcamp --replicas=4
kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=docker.io/jocatalin/kubernetes-bootcamp:v2
kubectl delete service kubernetes-bootcamp
kubectl delete deployment kubernetes-bootcamp

kubectl create namespace sheep-dog-dev
kubectl apply -f docker/deployment.yaml
kubectl logs sheep-dog-dev-6c977549d7-pkp29 -n sheep-dog-dev -c sheep-dog-dev-svc
minikube service -n sheep-dog-dev --all --url

curl http://localhost:8001/version
curl http://localhost:8001/api/v1/namespaces/default/pods/kubernetes-bootcamp-68cfbdbb99-r8m86:8080/proxy/