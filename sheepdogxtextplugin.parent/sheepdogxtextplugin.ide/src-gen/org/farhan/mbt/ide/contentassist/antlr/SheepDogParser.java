/*
 * generated by Xtext 2.36.0
 */
package org.farhan.mbt.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.farhan.mbt.ide.contentassist.antlr.internal.InternalSheepDogParser;
import org.farhan.mbt.services.SheepDogGrammarAccess;

public class SheepDogParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SheepDogGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SheepDogGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
			builder.put(grammarAccess.getStepAccess().getAlternatives(), "rule__Step__Alternatives");
			builder.put(grammarAccess.getGivenAccess().getAlternatives_4(), "rule__Given__Alternatives_4");
			builder.put(grammarAccess.getWhenAccess().getAlternatives_4(), "rule__When__Alternatives_4");
			builder.put(grammarAccess.getThenAccess().getAlternatives_4(), "rule__Then__Alternatives_4");
			builder.put(grammarAccess.getTEXT_LITERALAccess().getAlternatives(), "rule__TEXT_LITERAL__Alternatives");
			builder.put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
			builder.put(grammarAccess.getBackgroundAccess().getGroup(), "rule__Background__Group__0");
			builder.put(grammarAccess.getScenarioAccess().getGroup(), "rule__Scenario__Group__0");
			builder.put(grammarAccess.getExamplesAccess().getGroup(), "rule__Examples__Group__0");
			builder.put(grammarAccess.getScenarioTagsAccess().getGroup(), "rule__ScenarioTags__Group__0");
			builder.put(grammarAccess.getFeatureTagsAccess().getGroup(), "rule__FeatureTags__Group__0");
			builder.put(grammarAccess.getGivenAccess().getGroup(), "rule__Given__Group__0");
			builder.put(grammarAccess.getWhenAccess().getGroup(), "rule__When__Group__0");
			builder.put(grammarAccess.getThenAccess().getGroup(), "rule__Then__Group__0");
			builder.put(grammarAccess.getDocStringAccess().getGroup(), "rule__DocString__Group__0");
			builder.put(grammarAccess.getLineAccess().getGroup(), "rule__Line__Group__0");
			builder.put(grammarAccess.getTableAccess().getGroup(), "rule__Table__Group__0");
			builder.put(grammarAccess.getRowAccess().getGroup(), "rule__Row__Group__0");
			builder.put(grammarAccess.getCellAccess().getGroup(), "rule__Cell__Group__0");
			builder.put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
			builder.put(grammarAccess.getStepObjectAccess().getGroup(), "rule__StepObject__Group__0");
			builder.put(grammarAccess.getStepDefinitionAccess().getGroup(), "rule__StepDefinition__Group__0");
			builder.put(grammarAccess.getStepParametersAccess().getGroup(), "rule__StepParameters__Group__0");
			builder.put(grammarAccess.getFeatureAccess().getTagsAssignment_0(), "rule__Feature__TagsAssignment_0");
			builder.put(grammarAccess.getFeatureAccess().getNameAssignment_2(), "rule__Feature__NameAssignment_2");
			builder.put(grammarAccess.getFeatureAccess().getStatementsAssignment_4(), "rule__Feature__StatementsAssignment_4");
			builder.put(grammarAccess.getFeatureAccess().getBackgroundAssignment_5(), "rule__Feature__BackgroundAssignment_5");
			builder.put(grammarAccess.getFeatureAccess().getScenariosAssignment_6(), "rule__Feature__ScenariosAssignment_6");
			builder.put(grammarAccess.getBackgroundAccess().getNameAssignment_3(), "rule__Background__NameAssignment_3");
			builder.put(grammarAccess.getBackgroundAccess().getStatementsAssignment_5(), "rule__Background__StatementsAssignment_5");
			builder.put(grammarAccess.getBackgroundAccess().getStepsAssignment_6(), "rule__Background__StepsAssignment_6");
			builder.put(grammarAccess.getScenarioAccess().getTagsAssignment_0(), "rule__Scenario__TagsAssignment_0");
			builder.put(grammarAccess.getScenarioAccess().getNameAssignment_2(), "rule__Scenario__NameAssignment_2");
			builder.put(grammarAccess.getScenarioAccess().getStatementsAssignment_4(), "rule__Scenario__StatementsAssignment_4");
			builder.put(grammarAccess.getScenarioAccess().getStepsAssignment_5(), "rule__Scenario__StepsAssignment_5");
			builder.put(grammarAccess.getScenarioAccess().getExamplesAssignment_6(), "rule__Scenario__ExamplesAssignment_6");
			builder.put(grammarAccess.getExamplesAccess().getNameAssignment_3(), "rule__Examples__NameAssignment_3");
			builder.put(grammarAccess.getExamplesAccess().getStatementsAssignment_5(), "rule__Examples__StatementsAssignment_5");
			builder.put(grammarAccess.getExamplesAccess().getTheExamplesTableAssignment_6(), "rule__Examples__TheExamplesTableAssignment_6");
			builder.put(grammarAccess.getScenarioTagsAccess().getNameAssignment_1(), "rule__ScenarioTags__NameAssignment_1");
			builder.put(grammarAccess.getFeatureTagsAccess().getNameAssignment_1(), "rule__FeatureTags__NameAssignment_1");
			builder.put(grammarAccess.getGivenAccess().getNameAssignment_2(), "rule__Given__NameAssignment_2");
			builder.put(grammarAccess.getGivenAccess().getTheStepTableAssignment_4_0(), "rule__Given__TheStepTableAssignment_4_0");
			builder.put(grammarAccess.getGivenAccess().getTheDocStringAssignment_4_1(), "rule__Given__TheDocStringAssignment_4_1");
			builder.put(grammarAccess.getWhenAccess().getNameAssignment_2(), "rule__When__NameAssignment_2");
			builder.put(grammarAccess.getWhenAccess().getTheStepTableAssignment_4_0(), "rule__When__TheStepTableAssignment_4_0");
			builder.put(grammarAccess.getWhenAccess().getTheDocStringAssignment_4_1(), "rule__When__TheDocStringAssignment_4_1");
			builder.put(grammarAccess.getThenAccess().getNameAssignment_2(), "rule__Then__NameAssignment_2");
			builder.put(grammarAccess.getThenAccess().getTheStepTableAssignment_4_0(), "rule__Then__TheStepTableAssignment_4_0");
			builder.put(grammarAccess.getThenAccess().getTheDocStringAssignment_4_1(), "rule__Then__TheDocStringAssignment_4_1");
			builder.put(grammarAccess.getDocStringAccess().getLinesAssignment_2(), "rule__DocString__LinesAssignment_2");
			builder.put(grammarAccess.getLineAccess().getNameAssignment_0(), "rule__Line__NameAssignment_0");
			builder.put(grammarAccess.getTableAccess().getRowsAssignment_4(), "rule__Table__RowsAssignment_4");
			builder.put(grammarAccess.getRowAccess().getCellsAssignment_0(), "rule__Row__CellsAssignment_0");
			builder.put(grammarAccess.getCellAccess().getNameAssignment_1(), "rule__Cell__NameAssignment_1");
			builder.put(grammarAccess.getStatementAccess().getNameAssignment_0(), "rule__Statement__NameAssignment_0");
			builder.put(grammarAccess.getStepObjectAccess().getNameAssignment_1(), "rule__StepObject__NameAssignment_1");
			builder.put(grammarAccess.getStepObjectAccess().getStatementsAssignment_3(), "rule__StepObject__StatementsAssignment_3");
			builder.put(grammarAccess.getStepObjectAccess().getStepDefinitionsAssignment_4(), "rule__StepObject__StepDefinitionsAssignment_4");
			builder.put(grammarAccess.getStepDefinitionAccess().getNameAssignment_1(), "rule__StepDefinition__NameAssignment_1");
			builder.put(grammarAccess.getStepDefinitionAccess().getStatementsAssignment_3(), "rule__StepDefinition__StatementsAssignment_3");
			builder.put(grammarAccess.getStepDefinitionAccess().getStepParametersAssignment_4(), "rule__StepDefinition__StepParametersAssignment_4");
			builder.put(grammarAccess.getStepParametersAccess().getNameAssignment_1(), "rule__StepParameters__NameAssignment_1");
			builder.put(grammarAccess.getStepParametersAccess().getStatementsAssignment_3(), "rule__StepParameters__StatementsAssignment_3");
			builder.put(grammarAccess.getStepParametersAccess().getParametersTableAssignment_4(), "rule__StepParameters__ParametersTableAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SheepDogGrammarAccess grammarAccess;

	@Override
	protected InternalSheepDogParser createParser() {
		InternalSheepDogParser result = new InternalSheepDogParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT" };
	}

	public SheepDogGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SheepDogGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
