/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.tests;

import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)
@InjectWith(MyDslInjectorProvider.class)
public class ScenarioOutlineParsingTest extends ParsingTest {

	@Test
	public void parseScenarioOutlineWithName() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithoutName() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline:");
		assertErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithoutNameEOL() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim");
		assertErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithTags() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("@tag1\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithDescription() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Basic EDI claim\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithMultilineDescription() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Basic EDI claim\r\n");
		sb.append("No deductible\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithoutDescriptionEOL() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Basic EDI claim");
		assertErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithSteps() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Given do step one\r\n");
		sb.append("When do step three\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}

	@Test
	public void parseScenarioOutlineWithEverything() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("Feature: This is a test feature\r\n");
		sb.append("@tag1\r\n");
		sb.append("Scenario Outline: Submit a claim\r\n");
		sb.append("Basic EDI claim\r\n");
		sb.append("No deductible\r\n");
		sb.append("Given do step one\r\n");
		sb.append("When do step three\r\n");
		sb.append("Examples: Describe what this data is about\r\n");
		sb.append("| Header1 | Header2 |\r\n");
		assertNoErrors(sb);
	}
}
