/*
 * generated by Xtext 2.32.0
 */
package org.farhan.tests;

import com.google.inject.Inject;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.testing.validation.ValidationTestHelper;
import org.eclipse.xtext.xbase.lib.Extension;
import org.farhan.cucumber.CucumberPackage;
import org.farhan.cucumber.Feature;
import org.farhan.validation.CucumberValidator;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)
@InjectWith(CucumberInjectorProvider.class)
public class CucumberParsingTest {
	@Inject
	@Extension
	private ParseHelper<Feature> parseHelper;

	@Inject
	@Extension
	private ValidationTestHelper validationTestHelper;

	@Test
	public void testParser() throws Exception {
		StringBuilder builder = new StringBuilder();
		builder.append("Feature: Basic scenario Test");
		builder.append("\r\n");
		builder.append("This tests basic feature file grammar");
		builder.append("\r\n");
		builder.append("\r\n");
		builder.append("Scenario: Demo of all keywords");
		builder.append("\r\n");
		builder.append("Given The current state");
		builder.append("\r\n");
		builder.append("When The input is sen");
		builder.append("\r\n");
		builder.append("Then The state changes");
		builder.append("\r\n");
		builder.append("And The output is blah");
		builder.append("\r\n");
		builder.append("But This means nothing");
		builder.append("\r\n");
		validationTestHelper.assertNoIssues(parseHelper.parse(builder));
	}

	@Test
	public void testValidator() throws Exception {
		StringBuilder builder = new StringBuilder();
		builder.append("Feature: basic scenario Test");
		builder.append("\r\n");
		validationTestHelper.assertWarning(parseHelper.parse(builder), CucumberPackage.Literals.FEATURE,
				CucumberValidator.INVALID_NAME, "Name should start with a capital");
	}

}
