/*
 * generated by Xtext 2.32.0
 */
grammar InternalCucumber;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mbt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mbt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mbt.services.CucumberGrammarAccess;

}

@parser::members {

 	private CucumberGrammarAccess grammarAccess;

    public InternalCucumberParser(TokenStream input, CucumberGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Feature";
   	}

   	@Override
   	protected CucumberGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getTagsTagParserRuleCall_0_0());
				}
				lv_tags_0_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					add(
						$current,
						"tags",
						lv_tags_0_0,
						"mbt.Cucumber.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='Feature:'
		{
			newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getFeatureKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getTitleTitleParserRuleCall_2_0());
				}
				lv_title_2_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					set(
						$current,
						"title",
						lv_title_2_0,
						"mbt.Cucumber.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EOL_3=RULE_EOL
			{
				newLeafNode(this_EOL_3, grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_3());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getNarrativeNarrativeParserRuleCall_4_0());
				}
				lv_narrative_4_0=ruleNarrative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					set(
						$current,
						"narrative",
						lv_narrative_4_0,
						"mbt.Cucumber.Narrative");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getBackgroundBackgroundParserRuleCall_5_0());
				}
				lv_background_5_0=ruleBackground
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					set(
						$current,
						"background",
						lv_background_5_0,
						"mbt.Cucumber.Background");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getScenariosAbstractScenarioParserRuleCall_6_0());
				}
				lv_scenarios_6_0=ruleAbstractScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					add(
						$current,
						"scenarios",
						lv_scenarios_6_0,
						"mbt.Cucumber.AbstractScenario");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleAbstractScenario
entryRuleAbstractScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractScenarioRule()); }
	iv_ruleAbstractScenario=ruleAbstractScenario
	{ $current=$iv_ruleAbstractScenario.current; }
	EOF;

// Rule AbstractScenario
ruleAbstractScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractScenarioAccess().getScenarioParserRuleCall_0());
		}
		this_Scenario_0=ruleScenario
		{
			$current = $this_Scenario_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractScenarioAccess().getScenarioOutlineParserRuleCall_1());
		}
		this_ScenarioOutline_1=ruleScenarioOutline
		{
			$current = $this_ScenarioOutline_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractScenarioAccess().getBackgroundParserRuleCall_2());
		}
		this_Background_2=ruleBackground
		{
			$current = $this_Background_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBackground
entryRuleBackground returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackgroundRule()); }
	iv_ruleBackground=ruleBackground
	{ $current=$iv_ruleBackground.current; }
	EOF;

// Rule Background
ruleBackground returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBackgroundAccess().getTagsTagParserRuleCall_0_0());
				}
				lv_tags_0_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackgroundRule());
					}
					add(
						$current,
						"tags",
						lv_tags_0_0,
						"mbt.Cucumber.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='Background:'
		{
			newLeafNode(otherlv_1, grammarAccess.getBackgroundAccess().getBackgroundKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBackgroundAccess().getTitleTitleParserRuleCall_2_0());
				}
				lv_title_2_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackgroundRule());
					}
					set(
						$current,
						"title",
						lv_title_2_0,
						"mbt.Cucumber.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			this_EOL_3=RULE_EOL
			{
				newLeafNode(this_EOL_3, grammarAccess.getBackgroundAccess().getEOLTerminalRuleCall_3());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getBackgroundAccess().getNarrativeNarrativeParserRuleCall_4_0());
				}
				lv_narrative_4_0=ruleNarrative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackgroundRule());
					}
					set(
						$current,
						"narrative",
						lv_narrative_4_0,
						"mbt.Cucumber.Narrative");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBackgroundAccess().getStepsStepParserRuleCall_5_0());
				}
				lv_steps_5_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackgroundRule());
					}
					add(
						$current,
						"steps",
						lv_steps_5_0,
						"mbt.Cucumber.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getTagsTagParserRuleCall_0_0());
				}
				lv_tags_0_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					add(
						$current,
						"tags",
						lv_tags_0_0,
						"mbt.Cucumber.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='Scenario:'
		{
			newLeafNode(otherlv_1, grammarAccess.getScenarioAccess().getScenarioKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getTitleTitleParserRuleCall_2_0());
				}
				lv_title_2_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"title",
						lv_title_2_0,
						"mbt.Cucumber.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			this_EOL_3=RULE_EOL
			{
				newLeafNode(this_EOL_3, grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_3());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getNarrativeNarrativeParserRuleCall_4_0());
				}
				lv_narrative_4_0=ruleNarrative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"narrative",
						lv_narrative_4_0,
						"mbt.Cucumber.Narrative");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_5_0());
				}
				lv_steps_5_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					add(
						$current,
						"steps",
						lv_steps_5_0,
						"mbt.Cucumber.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleScenarioOutline
entryRuleScenarioOutline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioOutlineRule()); }
	iv_ruleScenarioOutline=ruleScenarioOutline
	{ $current=$iv_ruleScenarioOutline.current; }
	EOF;

// Rule ScenarioOutline
ruleScenarioOutline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioOutlineAccess().getTagsTagParserRuleCall_0_0());
				}
				lv_tags_0_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
					}
					add(
						$current,
						"tags",
						lv_tags_0_0,
						"mbt.Cucumber.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='Scenario'
		{
			newLeafNode(otherlv_1, grammarAccess.getScenarioOutlineAccess().getScenarioKeyword_1());
		}
		otherlv_2='Outline:'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioOutlineAccess().getOutlineKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioOutlineAccess().getTitleTitleParserRuleCall_3_0());
				}
				lv_title_3_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
					}
					set(
						$current,
						"title",
						lv_title_3_0,
						"mbt.Cucumber.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			this_EOL_4=RULE_EOL
			{
				newLeafNode(this_EOL_4, grammarAccess.getScenarioOutlineAccess().getEOLTerminalRuleCall_4());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioOutlineAccess().getNarrativeNarrativeParserRuleCall_5_0());
				}
				lv_narrative_5_0=ruleNarrative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
					}
					set(
						$current,
						"narrative",
						lv_narrative_5_0,
						"mbt.Cucumber.Narrative");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioOutlineAccess().getStepsStepParserRuleCall_6_0());
				}
				lv_steps_6_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
					}
					add(
						$current,
						"steps",
						lv_steps_6_0,
						"mbt.Cucumber.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioOutlineAccess().getExamplesExampleParserRuleCall_7_0());
				}
				lv_examples_7_0=ruleExample
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
					}
					add(
						$current,
						"examples",
						lv_examples_7_0,
						"mbt.Cucumber.Example");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_STEP_KEYWORD
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getStepAccess().getKeywordSTEP_KEYWORDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"mbt.Cucumber.STEP_KEYWORD");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getDescriptionStepDescriptionParserRuleCall_1_0());
				}
				lv_description_1_0=ruleStepDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"description",
						lv_description_1_0,
						"mbt.Cucumber.StepDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EOL_2=RULE_EOL
			{
				newLeafNode(this_EOL_2, grammarAccess.getStepAccess().getEOLTerminalRuleCall_2());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getTableTableParserRuleCall_3_0_0());
					}
					lv_table_3_0=ruleTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"table",
							lv_table_3_0,
							"mbt.Cucumber.Table");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getCodeDocStringParserRuleCall_3_1_0());
					}
					lv_code_4_0=ruleDocString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"code",
							lv_code_4_0,
							"mbt.Cucumber.DocString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExample
entryRuleExample returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExampleRule()); }
	iv_ruleExample=ruleExample
	{ $current=$iv_ruleExample.current; }
	EOF;

// Rule Example
ruleExample returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getTagsTagParserRuleCall_0_0());
				}
				lv_tags_0_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"tags",
						lv_tags_0_0,
						"mbt.Cucumber.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='Examples:'
		{
			newLeafNode(otherlv_1, grammarAccess.getExampleAccess().getExamplesKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getTitleTitleParserRuleCall_2_0());
				}
				lv_title_2_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					set(
						$current,
						"title",
						lv_title_2_0,
						"mbt.Cucumber.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			this_EOL_3=RULE_EOL
			{
				newLeafNode(this_EOL_3, grammarAccess.getExampleAccess().getEOLTerminalRuleCall_3());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getNarrativeNarrativeParserRuleCall_4_0());
				}
				lv_narrative_4_0=ruleNarrative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					set(
						$current,
						"narrative",
						lv_narrative_4_0,
						"mbt.Cucumber.Narrative");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getTableTableParserRuleCall_5_0());
				}
				lv_table_5_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					set(
						$current,
						"table",
						lv_table_5_0,
						"mbt.Cucumber.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableAccess().getTableAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
				}
				lv_rows_1_0=ruleTableRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"rows",
						lv_rows_1_0,
						"mbt.Cucumber.TableRow");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			this_EOL_2=RULE_EOL
			{
				newLeafNode(this_EOL_2, grammarAccess.getTableAccess().getEOLTerminalRuleCall_2());
			}
		)*
	)
;

// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	iv_ruleTableRow=ruleTableRow
	{ $current=$iv_ruleTableRow.current; }
	EOF;

// Rule TableRow
ruleTableRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableRowAccess().getTableRowAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getColsTableColParserRuleCall_1_0());
				}
				lv_cols_1_0=ruleTableCol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"cols",
						lv_cols_1_0,
						"mbt.Cucumber.TableCol");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='|'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableRowAccess().getVerticalLineKeyword_2());
		}
		this_EOL_3=RULE_EOL
		{
			newLeafNode(this_EOL_3, grammarAccess.getTableRowAccess().getEOLTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleTableCol
entryRuleTableCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableColRule()); }
	iv_ruleTableCol=ruleTableCol
	{ $current=$iv_ruleTableCol.current; }
	EOF;

// Rule TableCol
ruleTableCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableColAccess().getTableColAction_0(),
					$current);
			}
		)
		(
			(
				lv_cell_1_0=RULE_TABLE_CELL
				{
					newLeafNode(lv_cell_1_0, grammarAccess.getTableColAccess().getCellTABLE_CELLTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableColRule());
					}
					setWithLastConsumed(
						$current,
						"cell",
						lv_cell_1_0,
						"mbt.Cucumber.TABLE_CELL");
				}
			)
		)
	)
;

// Entry rule entryRuleDocString
entryRuleDocString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocStringRule()); }
	iv_ruleDocString=ruleDocString
	{ $current=$iv_ruleDocString.current; }
	EOF;

// Rule DocString
ruleDocString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDocStringAccess().getDocStringAction_0(),
					$current);
			}
		)
		(
			otherlv_1='"""'
			{
				newLeafNode(otherlv_1, grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_1_0());
			}
			this_EOL_2=RULE_EOL
			{
				newLeafNode(this_EOL_2, grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_1_1());
			}
			(
				(RULE_WORD | RULE_INT | RULE_STRING | RULE_ANY_OTHER)=>
				(
					{
						newCompositeNode(grammarAccess.getDocStringAccess().getTextTextParserRuleCall_1_2_0());
					}
					lv_text_3_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocStringRule());
						}
						set(
							$current,
							"text",
							lv_text_3_0,
							"mbt.Cucumber.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='"""'
			{
				newLeafNode(otherlv_4, grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_1_3());
			}
		)
		(
			this_EOL_5=RULE_EOL
			{
				newLeafNode(this_EOL_5, grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_2());
			}
		)*
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current.getText(); }
	EOF;

// Rule Title
ruleTitle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_WORD_0=RULE_WORD
			{
				$current.merge(this_WORD_0);
			}
			{
				newLeafNode(this_WORD_0, grammarAccess.getTitleAccess().getWORDTerminalRuleCall_0_0());
			}
			    |
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getTitleAccess().getINTTerminalRuleCall_0_1());
			}
			    |
			this_STRING_2=RULE_STRING
			{
				$current.merge(this_STRING_2);
			}
			{
				newLeafNode(this_STRING_2, grammarAccess.getTitleAccess().getSTRINGTerminalRuleCall_0_2());
			}
			    |
			this_PLACEHOLDER_3=RULE_PLACEHOLDER
			{
				$current.merge(this_PLACEHOLDER_3);
			}
			{
				newLeafNode(this_PLACEHOLDER_3, grammarAccess.getTitleAccess().getPLACEHOLDERTerminalRuleCall_0_3());
			}
		)
		(
			this_WORD_4=RULE_WORD
			{
				$current.merge(this_WORD_4);
			}
			{
				newLeafNode(this_WORD_4, grammarAccess.getTitleAccess().getWORDTerminalRuleCall_1_0());
			}
			    |
			this_INT_5=RULE_INT
			{
				$current.merge(this_INT_5);
			}
			{
				newLeafNode(this_INT_5, grammarAccess.getTitleAccess().getINTTerminalRuleCall_1_1());
			}
			    |
			this_STRING_6=RULE_STRING
			{
				$current.merge(this_STRING_6);
			}
			{
				newLeafNode(this_STRING_6, grammarAccess.getTitleAccess().getSTRINGTerminalRuleCall_1_2());
			}
			    |
			this_PLACEHOLDER_7=RULE_PLACEHOLDER
			{
				$current.merge(this_PLACEHOLDER_7);
			}
			{
				newLeafNode(this_PLACEHOLDER_7, grammarAccess.getTitleAccess().getPLACEHOLDERTerminalRuleCall_1_3());
			}
			    |
			this_STEP_KEYWORD_8=RULE_STEP_KEYWORD
			{
				$current.merge(this_STEP_KEYWORD_8);
			}
			{
				newLeafNode(this_STEP_KEYWORD_8, grammarAccess.getTitleAccess().getSTEP_KEYWORDTerminalRuleCall_1_4());
			}
			    |
			this_TAGNAME_9=RULE_TAGNAME
			{
				$current.merge(this_TAGNAME_9);
			}
			{
				newLeafNode(this_TAGNAME_9, grammarAccess.getTitleAccess().getTAGNAMETerminalRuleCall_1_5());
			}
		)*
	)
;

// Entry rule entryRuleNarrative
entryRuleNarrative returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNarrativeRule()); }
	iv_ruleNarrative=ruleNarrative
	{ $current=$iv_ruleNarrative.current.getText(); }
	EOF;

// Rule Narrative
ruleNarrative returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_WORD_0=RULE_WORD
			{
				$current.merge(this_WORD_0);
			}
			{
				newLeafNode(this_WORD_0, grammarAccess.getNarrativeAccess().getWORDTerminalRuleCall_0_0());
			}
			    |
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getNarrativeAccess().getINTTerminalRuleCall_0_1());
			}
			    |
			this_STRING_2=RULE_STRING
			{
				$current.merge(this_STRING_2);
			}
			{
				newLeafNode(this_STRING_2, grammarAccess.getNarrativeAccess().getSTRINGTerminalRuleCall_0_2());
			}
			    |
			this_PLACEHOLDER_3=RULE_PLACEHOLDER
			{
				$current.merge(this_PLACEHOLDER_3);
			}
			{
				newLeafNode(this_PLACEHOLDER_3, grammarAccess.getNarrativeAccess().getPLACEHOLDERTerminalRuleCall_0_3());
			}
		)
		(
			this_WORD_4=RULE_WORD
			{
				$current.merge(this_WORD_4);
			}
			{
				newLeafNode(this_WORD_4, grammarAccess.getNarrativeAccess().getWORDTerminalRuleCall_1_0());
			}
			    |
			this_INT_5=RULE_INT
			{
				$current.merge(this_INT_5);
			}
			{
				newLeafNode(this_INT_5, grammarAccess.getNarrativeAccess().getINTTerminalRuleCall_1_1());
			}
			    |
			this_STRING_6=RULE_STRING
			{
				$current.merge(this_STRING_6);
			}
			{
				newLeafNode(this_STRING_6, grammarAccess.getNarrativeAccess().getSTRINGTerminalRuleCall_1_2());
			}
			    |
			this_PLACEHOLDER_7=RULE_PLACEHOLDER
			{
				$current.merge(this_PLACEHOLDER_7);
			}
			{
				newLeafNode(this_PLACEHOLDER_7, grammarAccess.getNarrativeAccess().getPLACEHOLDERTerminalRuleCall_1_3());
			}
			    |
			this_STEP_KEYWORD_8=RULE_STEP_KEYWORD
			{
				$current.merge(this_STEP_KEYWORD_8);
			}
			{
				newLeafNode(this_STEP_KEYWORD_8, grammarAccess.getNarrativeAccess().getSTEP_KEYWORDTerminalRuleCall_1_4());
			}
			    |
			this_TAGNAME_9=RULE_TAGNAME
			{
				$current.merge(this_TAGNAME_9);
			}
			{
				newLeafNode(this_TAGNAME_9, grammarAccess.getNarrativeAccess().getTAGNAMETerminalRuleCall_1_5());
			}
		)*
		(
			this_EOL_10=RULE_EOL
			{
				$current.merge(this_EOL_10);
			}
			{
				newLeafNode(this_EOL_10, grammarAccess.getNarrativeAccess().getEOLTerminalRuleCall_2());
			}
		)+
	)+
;

// Entry rule entryRuleStepDescription
entryRuleStepDescription returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStepDescriptionRule()); }
	iv_ruleStepDescription=ruleStepDescription
	{ $current=$iv_ruleStepDescription.current.getText(); }
	EOF;

// Rule StepDescription
ruleStepDescription returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WORD_0=RULE_WORD
		{
			$current.merge(this_WORD_0);
		}
		{
			newLeafNode(this_WORD_0, grammarAccess.getStepDescriptionAccess().getWORDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getStepDescriptionAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getStepDescriptionAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_PLACEHOLDER_3=RULE_PLACEHOLDER
		{
			$current.merge(this_PLACEHOLDER_3);
		}
		{
			newLeafNode(this_PLACEHOLDER_3, grammarAccess.getStepDescriptionAccess().getPLACEHOLDERTerminalRuleCall_3());
		}
		    |
		this_STEP_KEYWORD_4=RULE_STEP_KEYWORD
		{
			$current.merge(this_STEP_KEYWORD_4);
		}
		{
			newLeafNode(this_STEP_KEYWORD_4, grammarAccess.getStepDescriptionAccess().getSTEP_KEYWORDTerminalRuleCall_4());
		}
		    |
		this_TAGNAME_5=RULE_TAGNAME
		{
			$current.merge(this_TAGNAME_5);
		}
		{
			newLeafNode(this_TAGNAME_5, grammarAccess.getStepDescriptionAccess().getTAGNAMETerminalRuleCall_5());
		}
	)+
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_TAGNAME
				{
					newLeafNode(lv_id_0_0, grammarAccess.getTagAccess().getIdTAGNAMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"mbt.Cucumber.TAGNAME");
				}
			)
		)
		(
			this_EOL_1=RULE_EOL
			{
				newLeafNode(this_EOL_1, grammarAccess.getTagAccess().getEOLTerminalRuleCall_1());
			}
		)?
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextAccess().getTextAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getLinesTextLineParserRuleCall_1_0());
				}
				lv_lines_1_0=ruleTextLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					add(
						$current,
						"lines",
						lv_lines_1_0,
						"mbt.Cucumber.TextLine");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTextLine
entryRuleTextLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextLineRule()); }
	iv_ruleTextLine=ruleTextLine
	{ $current=$iv_ruleTextLine.current; }
	EOF;

// Rule TextLine
ruleTextLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextLineAccess().getTextLineAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTextLineAccess().getValueTEXT_VALUEParserRuleCall_1_0());
				}
				lv_value_1_0=ruleTEXT_VALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextLineRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"mbt.Cucumber.TEXT_VALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_EOL_2=RULE_EOL
			{
				newLeafNode(this_EOL_2, grammarAccess.getTextLineAccess().getEOLTerminalRuleCall_2());
			}
		)+
	)
;

// Entry rule entryRuleTEXT_VALUE
entryRuleTEXT_VALUE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTEXT_VALUERule()); }
	iv_ruleTEXT_VALUE=ruleTEXT_VALUE
	{ $current=$iv_ruleTEXT_VALUE.current.getText(); }
	EOF;

// Rule TEXT_VALUE
ruleTEXT_VALUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTEXT_VALUEAccess().getTEXT_LITERALParserRuleCall_0());
		}
		this_TEXT_LITERAL_0=ruleTEXT_LITERAL
		{
			$current.merge(this_TEXT_LITERAL_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getTEXT_VALUEAccess().getTEXT_LITERALParserRuleCall_1());
			}
			this_TEXT_LITERAL_1=ruleTEXT_LITERAL
			{
				$current.merge(this_TEXT_LITERAL_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleTEXT_LITERAL
entryRuleTEXT_LITERAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTEXT_LITERALRule()); }
	iv_ruleTEXT_LITERAL=ruleTEXT_LITERAL
	{ $current=$iv_ruleTEXT_LITERAL.current.getText(); }
	EOF;

// Rule TEXT_LITERAL
ruleTEXT_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WORD_0=RULE_WORD
		{
			$current.merge(this_WORD_0);
		}
		{
			newLeafNode(this_WORD_0, grammarAccess.getTEXT_LITERALAccess().getWORDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getTEXT_LITERALAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getTEXT_LITERALAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_ANY_OTHER_3=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_3);
		}
		{
			newLeafNode(this_ANY_OTHER_3, grammarAccess.getTEXT_LITERALAccess().getANY_OTHERTerminalRuleCall_3());
		}
	)
;

RULE_INT : '-'? ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_STEP_KEYWORD : ('Given'|'When'|'Then'|'And'|'But'|'*') (' '|'\t')+;

RULE_PLACEHOLDER : '<' ~(('>'|' '|'\t'|'\n'|'\r'))+ '>';

RULE_TABLE_CELL : '|' ~(('|'|'\n'|'\r'))*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"'|'\r'|'\n')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\''|'\r'|'\n')))* '\'');

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* RULE_NL;

RULE_TAGNAME : '@' ~((' '|'\t'|'\n'|'\r'))+;

RULE_WORD : ~(('@'|'|'|' '|'\t'|'\n'|'\r')) ~((' '|'\t'|'\n'|'\r'))*;

RULE_WS : (' '|'\t');

RULE_EOL : RULE_NL;

fragment RULE_NL : '\r'? '\n'?;

RULE_ANY_OTHER : .;

fragment RULE_DIGIT : RULE_ASCII_DIGIT;

fragment RULE_LETTER : RULE_LATIN_ALPHABET;

fragment RULE_ASCII_SPACE : ' ';

fragment RULE_ASCII_DIGIT : '0'..'9';

fragment RULE_ASCII_SYMBOLS : ('!'..'/'|':'..'@'|'['..'`'|'{'..'~');

fragment RULE_LATIN_ALPHABET : ('A'..'Z'|'a'..'z');
