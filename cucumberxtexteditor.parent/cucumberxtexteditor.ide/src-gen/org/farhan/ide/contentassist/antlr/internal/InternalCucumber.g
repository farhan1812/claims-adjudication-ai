/*
 * generated by Xtext 2.36.0
 */
grammar InternalCucumber;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.farhan.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.farhan.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.farhan.services.CucumberGrammarAccess;

}
@parser::members {
	private CucumberGrammarAccess grammarAccess;

	public void setGrammarAccess(CucumberGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractScenario
entryRuleAbstractScenario
:
{ before(grammarAccess.getAbstractScenarioRule()); }
	 ruleAbstractScenario
{ after(grammarAccess.getAbstractScenarioRule()); } 
	 EOF 
;

// Rule AbstractScenario
ruleAbstractScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getAlternatives()); }
		(rule__AbstractScenario__Alternatives)
		{ after(grammarAccess.getAbstractScenarioAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackground
entryRuleBackground
:
{ before(grammarAccess.getBackgroundRule()); }
	 ruleBackground
{ after(grammarAccess.getBackgroundRule()); } 
	 EOF 
;

// Rule Background
ruleBackground 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackgroundAccess().getGroup()); }
		(rule__Background__Group__0)
		{ after(grammarAccess.getBackgroundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenarioOutline
entryRuleScenarioOutline
:
{ before(grammarAccess.getScenarioOutlineRule()); }
	 ruleScenarioOutline
{ after(grammarAccess.getScenarioOutlineRule()); } 
	 EOF 
;

// Rule ScenarioOutline
ruleScenarioOutline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getGroup()); }
		(rule__ScenarioOutline__Group__0)
		{ after(grammarAccess.getScenarioOutlineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExamples
entryRuleExamples
:
{ before(grammarAccess.getExamplesRule()); }
	 ruleExamples
{ after(grammarAccess.getExamplesRule()); } 
	 EOF 
;

// Rule Examples
ruleExamples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExamplesAccess().getGroup()); }
		(rule__Examples__Group__0)
		{ after(grammarAccess.getExamplesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExamplesTable
entryRuleExamplesTable
:
{ before(grammarAccess.getExamplesTableRule()); }
	 ruleExamplesTable
{ after(grammarAccess.getExamplesTableRule()); } 
	 EOF 
;

// Rule ExamplesTable
ruleExamplesTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getExamplesTableAccess().getRowsAssignment()); }
			(rule__ExamplesTable__RowsAssignment)
			{ after(grammarAccess.getExamplesTableAccess().getRowsAssignment()); }
		)
		(
			{ before(grammarAccess.getExamplesTableAccess().getRowsAssignment()); }
			(rule__ExamplesTable__RowsAssignment)*
			{ after(grammarAccess.getExamplesTableAccess().getRowsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepTable
entryRuleStepTable
:
{ before(grammarAccess.getStepTableRule()); }
	 ruleStepTable
{ after(grammarAccess.getStepTableRule()); } 
	 EOF 
;

// Rule StepTable
ruleStepTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getStepTableAccess().getRowsAssignment()); }
			(rule__StepTable__RowsAssignment)
			{ after(grammarAccess.getStepTableAccess().getRowsAssignment()); }
		)
		(
			{ before(grammarAccess.getStepTableAccess().getRowsAssignment()); }
			(rule__StepTable__RowsAssignment)*
			{ after(grammarAccess.getStepTableAccess().getRowsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCell
entryRuleCell
:
{ before(grammarAccess.getCellRule()); }
	 ruleCell
{ after(grammarAccess.getCellRule()); } 
	 EOF 
;

// Rule Cell
ruleCell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellAccess().getGroup()); }
		(rule__Cell__Group__0)
		{ after(grammarAccess.getCellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getAlternatives()); }
		(rule__Step__Alternatives)
		{ after(grammarAccess.getStepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocString
entryRuleDocString
:
{ before(grammarAccess.getDocStringRule()); }
	 ruleDocString
{ after(grammarAccess.getDocStringRule()); } 
	 EOF 
;

// Rule DocString
ruleDocString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocStringAccess().getGroup()); }
		(rule__DocString__Group__0)
		{ after(grammarAccess.getDocStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven
entryRuleGiven
:
{ before(grammarAccess.getGivenRule()); }
	 ruleGiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule Given
ruleGiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhen
entryRuleWhen
:
{ before(grammarAccess.getWhenRule()); }
	 ruleWhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule When
ruleWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenAccess().getGroup()); }
		(rule__When__Group__0)
		{ after(grammarAccess.getWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBut
entryRuleBut
:
{ before(grammarAccess.getButRule()); }
	 ruleBut
{ after(grammarAccess.getButRule()); } 
	 EOF 
;

// Rule But
ruleBut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButAccess().getGroup()); }
		(rule__But__Group__0)
		{ after(grammarAccess.getButAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsterisk
entryRuleAsterisk
:
{ before(grammarAccess.getAsteriskRule()); }
	 ruleAsterisk
{ after(grammarAccess.getAsteriskRule()); } 
	 EOF 
;

// Rule Asterisk
ruleAsterisk 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsteriskAccess().getGroup()); }
		(rule__Asterisk__Group__0)
		{ after(grammarAccess.getAsteriskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhrase
entryRulePhrase
:
{ before(grammarAccess.getPhraseRule()); }
	 rulePhrase
{ after(grammarAccess.getPhraseRule()); } 
	 EOF 
;

// Rule Phrase
rulePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getPhraseAccess().getTEXT_LITERALParserRuleCall()); }
			(ruleTEXT_LITERAL)
			{ after(grammarAccess.getPhraseAccess().getTEXT_LITERALParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getPhraseAccess().getTEXT_LITERALParserRuleCall()); }
			(ruleTEXT_LITERAL)*
			{ after(grammarAccess.getPhraseAccess().getTEXT_LITERALParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLine
entryRuleLine
:
{ before(grammarAccess.getLineRule()); }
	 ruleLine
{ after(grammarAccess.getLineRule()); } 
	 EOF 
;

// Rule Line
ruleLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineAccess().getGroup()); }
		(rule__Line__Group__0)
		{ after(grammarAccess.getLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLineBits
entryRuleLineBits
:
{ before(grammarAccess.getLineBitsRule()); }
	 ruleLineBits
{ after(grammarAccess.getLineBitsRule()); } 
	 EOF 
;

// Rule LineBits
ruleLineBits 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineBitsAccess().getTEXT_LITERALParserRuleCall()); }
		(ruleTEXT_LITERAL)*
		{ after(grammarAccess.getLineBitsAccess().getTEXT_LITERALParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTEXT_LITERAL
entryRuleTEXT_LITERAL
:
{ before(grammarAccess.getTEXT_LITERALRule()); }
	 ruleTEXT_LITERAL
{ after(grammarAccess.getTEXT_LITERALRule()); } 
	 EOF 
;

// Rule TEXT_LITERAL
ruleTEXT_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTEXT_LITERALAccess().getAlternatives()); }
		(rule__TEXT_LITERAL__Alternatives)
		{ after(grammarAccess.getTEXT_LITERALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenario__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getBackgroundParserRuleCall_0()); }
		ruleBackground
		{ after(grammarAccess.getAbstractScenarioAccess().getBackgroundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getScenarioParserRuleCall_1()); }
		ruleScenario
		{ after(grammarAccess.getAbstractScenarioAccess().getScenarioParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getScenarioOutlineParserRuleCall_2()); }
		ruleScenarioOutline
		{ after(grammarAccess.getAbstractScenarioAccess().getScenarioOutlineParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getGivenParserRuleCall_0()); }
		ruleGiven
		{ after(grammarAccess.getStepAccess().getGivenParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getWhenParserRuleCall_1()); }
		ruleWhen
		{ after(grammarAccess.getStepAccess().getWhenParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getThenParserRuleCall_2()); }
		ruleThen
		{ after(grammarAccess.getStepAccess().getThenParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getAndParserRuleCall_3()); }
		ruleAnd
		{ after(grammarAccess.getStepAccess().getAndParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getButParserRuleCall_4()); }
		ruleBut
		{ after(grammarAccess.getStepAccess().getButParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getAsteriskParserRuleCall_5()); }
		ruleAsterisk
		{ after(grammarAccess.getStepAccess().getAsteriskParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheStepTableAssignment_3_0()); }
		(rule__Given__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getGivenAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGivenAccess().getTheDocStringAssignment_3_1()); }
		(rule__Given__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getGivenAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheStepTableAssignment_3_0()); }
		(rule__When__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getWhenAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getWhenAccess().getTheDocStringAssignment_3_1()); }
		(rule__When__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getWhenAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheStepTableAssignment_3_0()); }
		(rule__Then__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getThenAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getTheDocStringAssignment_3_1()); }
		(rule__Then__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getThenAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheStepTableAssignment_3_0()); }
		(rule__And__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getAndAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndAccess().getTheDocStringAssignment_3_1()); }
		(rule__And__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getAndAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButAccess().getTheStepTableAssignment_3_0()); }
		(rule__But__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getButAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getButAccess().getTheDocStringAssignment_3_1()); }
		(rule__But__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getButAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsteriskAccess().getTheStepTableAssignment_3_0()); }
		(rule__Asterisk__TheStepTableAssignment_3_0)
		{ after(grammarAccess.getAsteriskAccess().getTheStepTableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAsteriskAccess().getTheDocStringAssignment_3_1()); }
		(rule__Asterisk__TheDocStringAssignment_3_1)
		{ after(grammarAccess.getAsteriskAccess().getTheDocStringAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TEXT_LITERAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTEXT_LITERALAccess().getWORDTerminalRuleCall_0()); }
		RULE_WORD
		{ after(grammarAccess.getTEXT_LITERALAccess().getWORDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTEXT_LITERALAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getTEXT_LITERALAccess().getIDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTEXT_LITERALAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getTEXT_LITERALAccess().getSTRINGTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_0()); }
	(rule__Feature__Group_0__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
	'Feature:'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
	(rule__Feature__NameAssignment_2)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
	rule__Feature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getStatementsAssignment_4()); }
	(rule__Feature__StatementsAssignment_4)*
	{ after(grammarAccess.getFeatureAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getAbstractScenariosAssignment_5()); }
	(rule__Feature__AbstractScenariosAssignment_5)*
	{ after(grammarAccess.getFeatureAccess().getAbstractScenariosAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__0__Impl
	rule__Feature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeatureAccess().getTagsAssignment_0_0()); }
		(rule__Feature__TagsAssignment_0_0)
		{ after(grammarAccess.getFeatureAccess().getTagsAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getFeatureAccess().getTagsAssignment_0_0()); }
		(rule__Feature__TagsAssignment_0_0)*
		{ after(grammarAccess.getFeatureAccess().getTagsAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_0_1()); }
	RULE_EOL
	{ after(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Background__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__0__Impl
	rule__Background__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getBackgroundKeyword_0()); }
	'Background:'
	{ after(grammarAccess.getBackgroundAccess().getBackgroundKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__1__Impl
	rule__Background__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getNameAssignment_1()); }
	(rule__Background__NameAssignment_1)
	{ after(grammarAccess.getBackgroundAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__2__Impl
	rule__Background__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getBackgroundAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__3__Impl
	rule__Background__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getStatementsAssignment_3()); }
	(rule__Background__StatementsAssignment_3)*
	{ after(grammarAccess.getBackgroundAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getStepsAssignment_4()); }
	(rule__Background__StepsAssignment_4)*
	{ after(grammarAccess.getBackgroundAccess().getStepsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_0()); }
	(rule__Scenario__Group_0__0)?
	{ after(grammarAccess.getScenarioAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_1()); }
	'Scenario:'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getNameAssignment_2()); }
	(rule__Scenario__NameAssignment_2)
	{ after(grammarAccess.getScenarioAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getStatementsAssignment_4()); }
	(rule__Scenario__StatementsAssignment_4)*
	{ after(grammarAccess.getScenarioAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getStepsAssignment_5()); }
	(rule__Scenario__StepsAssignment_5)*
	{ after(grammarAccess.getScenarioAccess().getStepsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_0__0__Impl
	rule__Scenario__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getScenarioAccess().getTagsAssignment_0_0()); }
		(rule__Scenario__TagsAssignment_0_0)
		{ after(grammarAccess.getScenarioAccess().getTagsAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getScenarioAccess().getTagsAssignment_0_0()); }
		(rule__Scenario__TagsAssignment_0_0)*
		{ after(grammarAccess.getScenarioAccess().getTagsAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_0_1()); }
	RULE_EOL
	{ after(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioOutline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__0__Impl
	rule__ScenarioOutline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getGroup_0()); }
	(rule__ScenarioOutline__Group_0__0)?
	{ after(grammarAccess.getScenarioOutlineAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__1__Impl
	rule__ScenarioOutline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getScenarioOutlineKeyword_1()); }
	'Scenario Outline:'
	{ after(grammarAccess.getScenarioOutlineAccess().getScenarioOutlineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__2__Impl
	rule__ScenarioOutline__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getNameAssignment_2()); }
	(rule__ScenarioOutline__NameAssignment_2)
	{ after(grammarAccess.getScenarioOutlineAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__3__Impl
	rule__ScenarioOutline__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getScenarioOutlineAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__4__Impl
	rule__ScenarioOutline__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getStatementsAssignment_4()); }
	(rule__ScenarioOutline__StatementsAssignment_4)*
	{ after(grammarAccess.getScenarioOutlineAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__5__Impl
	rule__ScenarioOutline__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getStepsAssignment_5()); }
	(rule__ScenarioOutline__StepsAssignment_5)*
	{ after(grammarAccess.getScenarioOutlineAccess().getStepsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getExamplesAssignment_6()); }
		(rule__ScenarioOutline__ExamplesAssignment_6)
		{ after(grammarAccess.getScenarioOutlineAccess().getExamplesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getExamplesAssignment_6()); }
		(rule__ScenarioOutline__ExamplesAssignment_6)*
		{ after(grammarAccess.getScenarioOutlineAccess().getExamplesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioOutline__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group_0__0__Impl
	rule__ScenarioOutline__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getTagsAssignment_0_0()); }
		(rule__ScenarioOutline__TagsAssignment_0_0)
		{ after(grammarAccess.getScenarioOutlineAccess().getTagsAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getTagsAssignment_0_0()); }
		(rule__ScenarioOutline__TagsAssignment_0_0)*
		{ after(grammarAccess.getScenarioOutlineAccess().getTagsAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioOutline__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioOutlineAccess().getEOLTerminalRuleCall_0_1()); }
	RULE_EOL
	{ after(grammarAccess.getScenarioOutlineAccess().getEOLTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__0__Impl
	rule__Examples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getGroup_0()); }
	(rule__Examples__Group_0__0)?
	{ after(grammarAccess.getExamplesAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__1__Impl
	rule__Examples__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getExamplesKeyword_1()); }
	'Examples:'
	{ after(grammarAccess.getExamplesAccess().getExamplesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__2__Impl
	rule__Examples__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getNameAssignment_2()); }
	(rule__Examples__NameAssignment_2)
	{ after(grammarAccess.getExamplesAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__3__Impl
	rule__Examples__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__4__Impl
	rule__Examples__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getStatementsAssignment_4()); }
	(rule__Examples__StatementsAssignment_4)*
	{ after(grammarAccess.getExamplesAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getTheExamplesTableAssignment_5()); }
	(rule__Examples__TheExamplesTableAssignment_5)
	{ after(grammarAccess.getExamplesAccess().getTheExamplesTableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group_0__0__Impl
	rule__Examples__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getExamplesAccess().getTagsAssignment_0_0()); }
		(rule__Examples__TagsAssignment_0_0)
		{ after(grammarAccess.getExamplesAccess().getTagsAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getExamplesAccess().getTagsAssignment_0_0()); }
		(rule__Examples__TagsAssignment_0_0)*
		{ after(grammarAccess.getExamplesAccess().getTagsAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_0_1()); }
	RULE_EOL
	{ after(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRowAccess().getCellsAssignment_0()); }
		(rule__Row__CellsAssignment_0)
		{ after(grammarAccess.getRowAccess().getCellsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getRowAccess().getCellsAssignment_0()); }
		(rule__Row__CellsAssignment_0)*
		{ after(grammarAccess.getRowAccess().getCellsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getRowAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getRowAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cell__Group__0__Impl
	rule__Cell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellAccess().getVerticalLineKeyword_0()); }
	'|'
	{ after(grammarAccess.getCellAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cell__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellAccess().getNameAssignment_1()); }
	(rule__Cell__NameAssignment_1)
	{ after(grammarAccess.getCellAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DocString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__0__Impl
	rule__DocString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_0()); }
	'"""'
	{ after(grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__1__Impl
	rule__DocString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__2__Impl
	rule__DocString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getLinesAssignment_2()); }
	(rule__DocString__LinesAssignment_2)*
	{ after(grammarAccess.getDocStringAccess().getLinesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__3__Impl
	rule__DocString__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_3()); }
	'"""'
	{ after(grammarAccess.getDocStringAccess().getQuotationMarkQuotationMarkQuotationMarkKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
	{ after(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
	'Given'
	{ after(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
	rule__Given__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getNameAssignment_1()); }
	(rule__Given__NameAssignment_1)
	{ after(grammarAccess.getGivenAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__2__Impl
	rule__Given__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getGivenAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getAlternatives_3()); }
	(rule__Given__Alternatives_3)?
	{ after(grammarAccess.getGivenAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__0__Impl
	rule__When__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getWhenKeyword_0()); }
	'When'
	{ after(grammarAccess.getWhenAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__1__Impl
	rule__When__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getNameAssignment_1()); }
	(rule__When__NameAssignment_1)
	{ after(grammarAccess.getWhenAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__2__Impl
	rule__When__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getWhenAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getAlternatives_3()); }
	(rule__When__Alternatives_3)?
	{ after(grammarAccess.getWhenAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getThenKeyword_0()); }
	'Then'
	{ after(grammarAccess.getThenAccess().getThenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
	rule__Then__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getNameAssignment_1()); }
	(rule__Then__NameAssignment_1)
	{ after(grammarAccess.getThenAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__2__Impl
	rule__Then__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getThenAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getAlternatives_3()); }
	(rule__Then__Alternatives_3)?
	{ after(grammarAccess.getThenAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAndAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
	rule__And__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getNameAssignment_1()); }
	(rule__And__NameAssignment_1)
	{ after(grammarAccess.getAndAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__2__Impl
	rule__And__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getAndAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAlternatives_3()); }
	(rule__And__Alternatives_3)?
	{ after(grammarAccess.getAndAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__But__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But__Group__0__Impl
	rule__But__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButAccess().getButKeyword_0()); }
	'But'
	{ after(grammarAccess.getButAccess().getButKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But__Group__1__Impl
	rule__But__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButAccess().getNameAssignment_1()); }
	(rule__But__NameAssignment_1)
	{ after(grammarAccess.getButAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But__Group__2__Impl
	rule__But__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getButAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__But__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButAccess().getAlternatives_3()); }
	(rule__But__Alternatives_3)?
	{ after(grammarAccess.getButAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asterisk__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asterisk__Group__0__Impl
	rule__Asterisk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsteriskAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getAsteriskAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asterisk__Group__1__Impl
	rule__Asterisk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsteriskAccess().getNameAssignment_1()); }
	(rule__Asterisk__NameAssignment_1)
	{ after(grammarAccess.getAsteriskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asterisk__Group__2__Impl
	rule__Asterisk__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsteriskAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
	{ after(grammarAccess.getAsteriskAccess().getEOLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asterisk__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsteriskAccess().getAlternatives_3()); }
	(rule__Asterisk__Alternatives_3)?
	{ after(grammarAccess.getAsteriskAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getNameAssignment_0()); }
	(rule__Statement__NameAssignment_0)
	{ after(grammarAccess.getStatementAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getTagAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getNameAssignment_1()); }
	(rule__Tag__NameAssignment_1)
	{ after(grammarAccess.getTagAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__0__Impl
	rule__Line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getNameAssignment_0()); }
	(rule__Line__NameAssignment_0)
	{ after(grammarAccess.getLineAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getLineAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__TagsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getTagsTagParserRuleCall_0_0_0()); }
		ruleTag
		{ after(grammarAccess.getFeatureAccess().getTagsTagParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNamePhraseParserRuleCall_2_0()); }
		rulePhrase
		{ after(grammarAccess.getFeatureAccess().getNamePhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getFeatureAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__AbstractScenariosAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAbstractScenariosAbstractScenarioParserRuleCall_5_0()); }
		ruleAbstractScenario
		{ after(grammarAccess.getFeatureAccess().getAbstractScenariosAbstractScenarioParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getBackgroundAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getBackgroundAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__StepsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getStepsStepParserRuleCall_4_0()); }
		ruleStep
		{ after(grammarAccess.getBackgroundAccess().getStepsStepParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__TagsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getTagsTagParserRuleCall_0_0_0()); }
		ruleTag
		{ after(grammarAccess.getScenarioAccess().getTagsTagParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNamePhraseParserRuleCall_2_0()); }
		rulePhrase
		{ after(grammarAccess.getScenarioAccess().getNamePhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StepsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_5_0()); }
		ruleStep
		{ after(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__TagsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getTagsTagParserRuleCall_0_0_0()); }
		ruleTag
		{ after(grammarAccess.getScenarioOutlineAccess().getTagsTagParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getNamePhraseParserRuleCall_2_0()); }
		rulePhrase
		{ after(grammarAccess.getScenarioOutlineAccess().getNamePhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getScenarioOutlineAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__StepsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getStepsStepParserRuleCall_5_0()); }
		ruleStep
		{ after(grammarAccess.getScenarioOutlineAccess().getStepsStepParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioOutline__ExamplesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioOutlineAccess().getExamplesExamplesParserRuleCall_6_0()); }
		ruleExamples
		{ after(grammarAccess.getScenarioOutlineAccess().getExamplesExamplesParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__TagsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getTagsTagParserRuleCall_0_0_0()); }
		ruleTag
		{ after(grammarAccess.getExamplesAccess().getTagsTagParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getNamePhraseParserRuleCall_2_0()); }
		rulePhrase
		{ after(grammarAccess.getExamplesAccess().getNamePhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getExamplesAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__TheExamplesTableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getTheExamplesTableExamplesTableParserRuleCall_5_0()); }
		ruleExamplesTable
		{ after(grammarAccess.getExamplesAccess().getTheExamplesTableExamplesTableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExamplesTable__RowsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesTableAccess().getRowsRowParserRuleCall_0()); }
		ruleRow
		{ after(grammarAccess.getExamplesTableAccess().getRowsRowParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepTable__RowsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepTableAccess().getRowsRowParserRuleCall_0()); }
		ruleRow
		{ after(grammarAccess.getStepTableAccess().getRowsRowParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__CellsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getCellsCellParserRuleCall_0_0()); }
		ruleCell
		{ after(grammarAccess.getRowAccess().getCellsCellParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getCellAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__LinesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocStringAccess().getLinesLineParserRuleCall_2_0()); }
		ruleLine
		{ after(grammarAccess.getDocStringAccess().getLinesLineParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getGivenAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getGivenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getGivenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getWhenAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getWhenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getWhenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getThenAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getThenAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getThenAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getAndAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getAndAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getAndAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getButAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getButAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__But__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getButAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsteriskAccess().getNamePhraseParserRuleCall_1_0()); }
		rulePhrase
		{ after(grammarAccess.getAsteriskAccess().getNamePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__TheStepTableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsteriskAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
		ruleStepTable
		{ after(grammarAccess.getAsteriskAccess().getTheStepTableStepTableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asterisk__TheDocStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsteriskAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
		ruleDocString
		{ after(grammarAccess.getAsteriskAccess().getTheDocStringDocStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getNamePhraseParserRuleCall_0_0()); }
		rulePhrase
		{ after(grammarAccess.getStatementAccess().getNamePhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTagAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getNameLineBitsParserRuleCall_0_0()); }
		ruleLineBits
		{ after(grammarAccess.getLineAccess().getNameLineBitsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : ('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'-'|'.')+;

RULE_WORD : ~(('@'|'|'|' '|'\t'|'\n'|'\r')) ~((' '|'\t'|'\n'|'\r'))*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"'|'\r'|'\n')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\''|'\r'|'\n')))* '\'');

RULE_WS : (' '|'\t'|'\r')+;

RULE_SL_COMMENT : '#' ~('\n')* RULE_EOL;

RULE_EOL : '\n'+;
